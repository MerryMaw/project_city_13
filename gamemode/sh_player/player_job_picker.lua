---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by themaw.
--- DateTime: 12/25/24 3:57â€¯PM
---

c13JobsList = c13JobsList or {};
playerJobsPickedID = playerJobsPickedID or {};

local count = table.Count;

if (SERVER) then
    util.AddNetworkString("TransmitListOfJobs")
    util.AddNetworkString("RequestSpawnAsJob")

    hook.Add("Initialize","c13_loadInitJobs",function()
        c13JobsList = getConfigSetting("init_roles");
        print("Initialized ", count(c13JobsList), " Jobs");
    end)

    hook.Add("PlayerInitialSpawn", "c13_transmitJobs", function(pl)
        print("Transmitted jobs table to ", pl:Nick(), pl:SteamID64());

        net.Start("TransmitListOfJobs")
            net.WriteTable(c13JobsList);
        net.Send(pl);
    end)

    net.Receive("RequestSpawnAsJob", function(_, pl)
        local job = net.ReadString();

        if (not job) then print("Player ", pl:Nick(), pl:SteamID64(), " selected empty job!") return end
        if (hasPlayerPreviousJob(pl)) then print("Player ", pl:Nick(), pl:SteamID64(), " already had a previous job!") return end

        local jobData = getAllPickableJobs()[job];

        if (not jobData) then error("Player could not find selected job ", job); return end

        pl.allowSpawn = true;
        pl:Spawn();

        addPlayerLoadout(pl,jobData);
    end);

    ---addPlayerLoadout
    ---@param pl userdata
    ---@param jobData table
    function addPlayerLoadout(pl, jobData)
        local loadout = jobData["loadout"];

        if (not loadout) then return end;

        for _,v in pairs(loadout) do
            local item = createItem(v);
            if (item) then pl:EquipItem(item) end
        end

        playerJobsPickedID[pl:EntIndex()] = jobData;
    end

    ---hasPlayerPreviousJob
    ---@param pl userdata
    ---@return table
    function hasPlayerPreviousJob(pl)
        return playerJobsPickedID[pl:EntIndex()];
    end

    ---resetPlayerPreviousJob
    ---@param pl userdata
    function resetPlayerPreviousJob(pl)
        playerJobsPickedID[pl:EntIndex()] = nil
    end
else
    net.Receive("TransmitListOfJobs", function()
        c13JobsList = net.ReadTable();
        print("Initialized ", count(c13JobsList), " Jobs");

        reloadJobPickerHUD();
    end )

    ---requestSpawnAsJob
    ---@param jobName string
    function requestSpawnAsJob(jobName)
        net.Start("RequestSpawnAsJob")
            net.WriteString(jobName);
        net.SendToServer();
    end
end

---getAllPickableJobs
---@return table
function getAllPickableJobs()
    return c13JobsList or {};
end
