---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by themaw.
--- DateTime: 12/20/24 9:13â€¯PM
---

serverEquipment = serverEquipment or {};

local type = type;
local top = Vector(0,0,20);
-- This should be universal for every object, not just players.
local meta = FindMetaTable("Entity");

local slotIDs = {};
slotIDs[1] = "Head";
slotIDs[2] = "Headset";
slotIDs[3] = "Backpack";
slotIDs[4] = "Shoulder";
slotIDs[5] = "Gloves";
slotIDs[6] = "Foot";
slotIDs[7] = "Body";
slotIDs[8] = "Legs";
slotIDs[9] = "Main Hand";
slotIDs[10] = "Off Hand";

local slotNameToIDs = {}

--- Reverse the IDs to a NameToID map for speedier performance.
for k,v in pairs(slotIDs) do
    slotNameToIDs[v:lower()] = k;
end

---equipment_translateID
---@param id number
---@return string
function equipment_translateID(id)
    return slotIDs[id];
end

---equipment_translateName
---@param name string
---@return number
function equipment_translateName(name)
    name = name:lower();
    return slotNameToIDs[name];
end

if SERVER then
    -- Serverside nets
    util.AddNetworkString("EquipItem")
    util.AddNetworkString("UnequipItem")
    util.AddNetworkString("ClearEquipment")
    util.AddNetworkString("TransmitEquipment")

    ---EquipItem
    ---@param item ITEM
    ---@param slot string
    function meta:EquipItem(item,slot)
        if (not item) then return end

        local entId = self:EntIndex();

        slot = slot and slot or item.slot;
        slot = slot and slot or "Main Hand";

        local slotId = equipment_translateName(slot);

        if (not slotId) then return end;

        serverEquipment[entId] = serverEquipment[entId] or {};

        -- Unequip the item if there is something on the slot.
        if (serverEquipment[entId][slotId]) then
            self:UnequipItem(serverEquipment[entId][slotId]);
        end

        serverEquipment[entId][slotId] = item;

        print("Equipped ", entId, slotId, " item ", item.name);

        if (self:IsPlayer()) then
            net.Start("EquipItem")
            net.WriteUInt(entId,32);
            net.WriteUInt(slotId,7);
            net.WriteTable(item);
            net.Send(self);
        end
    end

    ---UnequipItem
    ---@param item ITEM
    ---@param slot string
    ---@param bIgnoreDrop boolean
    function meta:UnequipItem(item, slot, bIgnoreDrop)
        local entId = self:EntIndex();
        if (not serverEquipment[entId]) then return end;

        slot = slot and slot or item.slot;
        slot = slot and slot or "Main Hand";

        local slotId = equipment_translateName(slot);
        if (not slotId) then return end;

        if (not bIgnoreDrop) then
            -- Drops the item on the entity's position.
            SpawnItem(self:GetPos() + top, item,1);
        end

        serverEquipment[entId][slotId] = nil;

        print("Unequipped ", entId, slotId);

        if (self:IsPlayer()) then
            net.Start("UnequipItem")
            net.WriteUInt(entId,32);
            net.WriteUInt(slotId,7);
            net.Send(self);
        end
    end

else
    net.Receive("EquipItem",function()
        local entId = net.ReadUInt(32);
        local slotId = net.ReadUInt(7);
        local item = net.ReadTable(); -- Only provide itemClass and itemId

        serverEquipment[entId] = serverEquipment[entId] or {};
        serverEquipment[entId][slotId] = item;

        print("Equipped ", entId, slotId, " item ", item.name);

        reloadEquipmentMenu(entId);
    end)

    net.Receive("UnequipItem",function()
        local entId = net.ReadUInt(32);
        local slotId = net.ReadUInt(7);

        serverEquipment[entId] = serverEquipment[entId] or {};
        serverEquipment[entId][slotId] = nil;

        print("Unequipped ", entId, slotId);

        reloadEquipmentMenu(entId);
    end)

    net.Receive("TransmitEquipment",function()
        local entId = net.ReadUInt(32);
        local equipment = net.ReadTable(); -- Only provide itemClass and itemId

        serverEquipment[entId] = equipment;

        reloadEquipmentMenu(entId);
    end)

    net.Receive("ClearEquipment",function()
        local entId = net.ReadUInt(32);

        serverEquipment[entId] = nil;

        reloadEquipmentMenu(entId);
    end)
end

---getEquipment
---@param entId number
---@return table
function getEquipment(entId)
    return serverEquipment[entId] or {};
end

---getEquipmentSlot
---@param entId number
---@param name string
---@return ITEM
function getEquipmentSlot(entId,name)
    if (type(name) == "string") then name = equipment_translateName(name) end
    return getEquipment(entId)[name];
end

---clearEquipment
---@param entId number
function clearEquipment(entId)
    serverEquipment[entId] = nil;
end

---getEquipmentSlots
---@return table
function getEquipmentSlots()
    return slotIDs;
end